// Brute Force Approach
class Solution{
    
    //Function to return sum of count of set bits in the integers from 1 to n.
   public static int countSetBits(int n){
    int count = 0;
    for(int i=1;i<=n;i++){
        int num=i;
        while(num > 0){
        count += num & 1;
        num = num >> 1;
    }
    }
    
    return count;
}
} 

// Optimal Approach

class Solution {

    public static int countSetBits(int n) {
        int count = 0;
        int bitPosition = 0;

        while ((1 << bitPosition) <= n) {
            int blockSize = 1 << (bitPosition + 1);
            int completeBlocks = (n + 1) / blockSize;
            count += completeBlocks * (blockSize / 2);

            int remainder = (n + 1) % blockSize;
            if (remainder > (1 << bitPosition)) {
                count += remainder - (1 << bitPosition);
            }

            bitPosition++;
        }

        return count;
    }
}
