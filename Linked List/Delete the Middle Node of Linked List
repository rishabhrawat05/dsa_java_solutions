// Brute Force Approach

class Solution {
    public ListNode deleteMiddle(ListNode head) {
        if(head==null || head.next==null){
            return null;
        }
        ListNode temp=head;
        int count=0;
        while(temp!=null){
            temp=temp.next;
            count++;
        }
        int mid=count/2;
        ListNode pointer=head;
        for(int i=0;i<mid-1;i++){
            pointer=pointer.next;
        }
        ListNode delNode=pointer.next;
        pointer.next=pointer.next.next;
        delNode=null;
        return head;
    }
}

// Optimal Approach

class Solution {
    public ListNode deleteMiddle(ListNode head) {
        if(head==null || head.next==null){
            return null;
        }
        ListNode slow=head;
        ListNode fast=head;
        fast = head.next.next;
        while(fast!=null && fast.next!=null){
            slow=slow.next;
            fast=fast.next.next;
        }
        if(slow.next!=null){
            slow.next=slow.next.next;
        }
        return head;
    }
}
