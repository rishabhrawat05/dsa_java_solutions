class Solution {
    public static ArrayList<Integer> duplicates(int arr[], int n) {
        // Not Optimized
    //     int dup[]=new int[n];
    //     ArrayList<Integer> list=new ArrayList<>(n);
    //     int j=0;
    //     for(int i=0;i<n;i++){
    //         j=arr[i];
    //         dup[j]+=1;
    //     }
    //     for(int i=0;i<n;i++){
    //         if(dup[i]>1){
    //             list.add(i);
    //         }
    //     }
    //     Collections.sort(list);
    //     if(list.isEmpty()){
    //         list.add(-1);
    //         return list;
    //     }
    //     return list;
        
    // }
// Optimized
        ArrayList<Integer> list=new ArrayList<>(n);
        for(int i=0;i<n;i++){
            int j=arr[i]%n;
            arr[j]+=n;
        }
        for(int i=0;i<n;i++){
            if(arr[i]/n>=2){
                list.add(i);
            }
        }
        Collections.sort(list);
        if(list.isEmpty()){
            list.add(-1);
            return list;
        }
        return list;
    }
}
