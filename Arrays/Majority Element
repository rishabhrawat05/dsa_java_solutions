/////// BETTER APPROACH //////

class Solution {
    public int majorityElement(int[] nums) {
        HashMap<Integer,Integer> map=new HashMap<>();
        for(int i=0;i<nums.length;i++){
            if(map.containsKey(nums[i])){
                map.put(nums[i],map.get(nums[i])+1);
            }
            else {
                map.put(nums[i], 1);
            }
        }
        for(int i=0;i<nums.length;i++){
            if(map.get(nums[i])>nums.length/2){
                return nums[i];
            }
        }
        return -1;
    }
}

///// OPTIMAL APPROACH /////

class Solution {
    public int majorityElement(int[] nums) {
    int cnt=0;
    int elm=0;
    for(int i=0;i<nums.length;i++){
        if(cnt==0){
            cnt++;
            elm=nums[i];
        }
        else if(elm==nums[i]){
            cnt++;
        }
        else{
            cnt--;
        }
    }
    int count=0;
    for(int i=0;i<nums.length;i++){
        if(elm==nums[i]){
            count++;
        }
    }
    if(count>(nums.length/2)){
        return elm;
    }
    return -1;
    }
}
