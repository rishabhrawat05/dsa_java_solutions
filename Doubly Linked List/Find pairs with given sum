// Brute Force Approach

class Solution {
    public static ArrayList<ArrayList<Integer>> findPairsWithGivenSum(int target, Node head) {
        // code here
        ArrayList<ArrayList<Integer>> result = new ArrayList<>();
        
        Node temp1=head;
        while(temp1!=null){
            Node temp2=temp1.next;
            while(temp2!=null && temp1.data+temp2.data<=target){
                if(temp1.data+temp2.data==target){
                    ArrayList<Integer> arr=new ArrayList<>();
                    arr.add(temp1.data);
                    arr.add(temp2.data);
                    result.add(arr);

                }
                temp2=temp2.next;
            }
            temp1=temp1.next;
        }
        
        
        return result;
        
    }
}

// Optimal Approach

class Solution {
    public static ArrayList<ArrayList<Integer>> findPairsWithGivenSum(int target, Node head) {
        // code here
        ArrayList<ArrayList<Integer>> result=new ArrayList<>();
        Node left=head;
        Node right=head;
        while(right.next!=null){
            right=right.next;
        }
        while(left.data<right.data){
            if(left.data+right.data==target){
                ArrayList<Integer> pair=new ArrayList<Integer>();
                pair.add(left.data);
                pair.add(right.data);
                result.add(pair);
                left=left.next;
                right=right.prev;
            }
            else if(left.data+right.data>target){
                right=right.prev;
            }
            else{
                left=left.next;
            }
        }
        return result;
    }
}
